/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define LEFT_POSITIONS  0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38
#define RIGHT_POSITIONS 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41

/* Key Positions
╭────────────────────────╮ ╭────────────────────────╮
│  0   1   2   3   4   5 │ │  6   7   8   9  10  11 │
│ 12  13  14  15  16  17 │ │ 18  19  20  21  22  23 │
│ 24  25  26  27  28  29 │ │ 30  31  32  33  34  35 │
╰───────────╮ 36  37  38 │ │ 39  40  41 ╭───────────╯
            ╰────────────╯ ╰────────────╯
*/
// Mouse Overrides

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 2400
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 40

// Layers

#define DEFAULT   0
#define LOWER     1
#define UPPER     2
#define MACRO     3

/ {
    behaviors {
        hrml: home_row_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <140>;
            flavor = "tap-preferred";

            //require-prior-idle-ms = <125>;

            hold-trigger-key-positions = < RIGHT_POSITIONS >;

            //hold-trigger-on-release; // delay positional check until key release

            bindings = <&kp>, <&kp>;
        };

        hrmr: home_row_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <140>;
            flavor = "tap-preferred";

            //require-prior-idle-ms = <125>;

            hold-trigger-key-positions = < LEFT_POSITIONS >;

            //hold-trigger-on-release; // delay positional check until key release

            bindings = <&kp>, <&kp>;
        };

        lthp: layer_tap_hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <150>;

            //require-prior-idle-ms = <125>;

            flavor = "hold-preferred";
            bindings = <&mo>, <&kp>;
        };

        mthp: mod_tap_hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <150>;

            //require-prior-idle-ms = <125>;

            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };

        mttp: mod_tap_tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <150>;

            //require-prior-idle-ms = <125>;

            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        behavior_kp_kp: behavior_kp_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "BEHAVIOR_KP_KP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <0 1 2 3 4 5 17 16 15 14 13 12 24 25 26 27 28 29 38 37 36 39 40 41 30 19 31 34 35 23 22 21 20 18 32 33 11 10 9 8 7 6>;
            hold-trigger-on-release;
            tapping-term-ms = <280>;
            quick-tap-ms = <176>;
        };

        behavior_mo_kp_: behavior_mo_kp_ {
            compatible = "zmk,behavior-hold-tap";
            label = "BEHAVIOR_MO_KP_";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <0 1 2 3 4 5 17 16 15 14 13 12 24 25 26 27 28 29 38 37 36 39 40 41 30 19 31 34 35 23 22 21 20 18 32 33 11 10 9 8 7 6>;
            hold-trigger-on-release;
            tapping-term-ms = <280>;
            quick-tap-ms = <176>;
        };

        behavior_tap_dance: behavior_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "BEHAVIOR_TAP_DANCE";
            #binding-cells = <0>;
            bindings = <&none>, <&none>;

            tapping-term-ms = <176>;
        };

        tap_dance_kp_kp: tap_dance_kp_kp {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_KP_KP";
            #binding-cells = <0>;
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;
        };

        mo4_: mo4_ {
            compatible = "zmk,behavior-tap-dance";
            label = "MO4_";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET>, <&tog 4>;

            tapping-term-ms = <175>;
        };

        tap_dance_E: tap_dance_E {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_E";
            #binding-cells = <0>;
            bindings = <&kp T>, <&kp GRAVE>;

            tapping-term-ms = <230>;
        };

        hrml_kp_mo: hrml_kp_mo {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <140>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <RIGHT_POSITIONS>;
            label = "HRML_KP_MO";
            bindings = <&mo>, <&kp>;
        };
    };

    macros {
        vim_save: vim_save {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp ESC &kp COLON &kp W &kp RETURN>;
        };

        vim_quit: vim_quit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp ESC &kp COLON &kp Q &kp RETURN>;
        };

        vim_up: vim_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LCTRL &kp U>;
        };

        vim_down: vim_down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LCTRL &kp D>;
        };

        macro: macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COMMA &kp F &kp Y &kp E &kp N &kp M &kp C &kp Z &kp SPACE &kp SQT &kp N &kp F &kp L &kp B &kp M &kp SPACE &kp H &kp F &kp COMMA &kp J &kp N &kp F &kp T &kp N &kp SPACE &kp EXCL &kp T &kp COMMA &kp F &kp Y &kp E &kp N &kp M &kp C &kp Z &kp SPACE &kp SQT &kp N &kp F &kp SPACE &kp L &kp B &kp X &kp M &kp SPACE &kp H &kp F &kp COMMA &kp J &kp N &kp F &kp T &kp N &kp EXCL &kp EXCL>;
            label = "MACRO";
        };
    };

    combos {
        compatible = "zmk,combos";

        ru_en {
            bindings = <&kp LS(LEFT_ALT)>;
            key-positions = <15 16>;
        };

        mo3 {
            bindings = <&mo 3>;
            key-positions = <24 29>;
        };

        left_skobka {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <4 5>;
        };

        r_sk {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <6 7>;
        };

        bek_slesh {
            bindings = <&kp UNDERSCORE>;
            key-positions = <7 8>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <3 4>;
        };

        tog4 {
            bindings = <&tog 4>;
            key-positions = <30 35>;
        };

        caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <29 30>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "base";
            bindings = <
&kp TAB        &kp Q          &kp W         &kp E           &kp R         &tap_dance_E     &kp Y          &kp U              &kp I                 &kp O         &kp P             &mo4_
&kp BACKSPACE  &hrml LSHFT A  &hrml LALT S  &hrml LCTRL D   &hrml LCMD F  &kp G            &kp H          &hrmr RCMD J       &hrmr RCTRL K         &hrmr RALT L  &hrmr RSHFT SEMI  &kp SQT
&kp ESCAPE     &kp Z          &kp X         &kp C           &kp V         &kp B            &kp N          &tap_dance_kp_kp   &kp COMMA             &kp DOT       &kp FSLH          &kp BSLH
                                            &lthp 3 LS(N1)  &lthp 5 FSLH  &lthp 1 ENTER    &lthp 1 SPACE  &lthp 2 LS(SLASH)  &lthp 3 LS(NUMBER_7)
            >;
        };

        lower_layer {
            display-name = "low";
            bindings = <
&kp DEL        &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp PG_UP  &kp PG_DN  &kp HOME  &kp END    &kt PRINTSCREEN  &kp LEFT_CONTROL
&kp BACKSPACE  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0    &kp LEFT   &kp DOWN   &kp UP    &kp RIGHT  &kp LEFT_ALT     &kp LEFT_SHIFT
&kp F1         &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &kp F7     &kp F8     &kp F9    &kp F10    &kp F11          &kp F12
                               &none   &none   &trans    &none      &none      &none
            >;
        };

        raise_layer {
            display-name = "up";
            bindings = <
&none  &kp EXCL   &kp AT    &kp HASH      &kp DLLR  &kp PRCNT    &kp LPAR  &kp RPAR  &kp UNDER  &kp PLUS   &kp RS(TILDE)  &none
&none  &kp CARET  &kp AMPS  &kp ASTERISK  &kp LPAR  &kp RPAR     &kp LBKT  &kp RBKT  &kp MINUS  &kp EQUAL  &kp BSLH       &none
&none  &none      &none     &none         &none     &none        &none     &none     &kp LT     &kp GT     &kp PIPE       &none
                            &trans        &trans    &trans       &trans    &trans    &trans
            >;
        };

        macro_layer {
            display-name = "macro";
            bindings = <
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none   &none   &none   &none  &none  &none
&bt BT_CLR_ALL  &none         &none         &none         &none         &none           &none   &none   &none   &none  &none  &none
&none           &none         &none         &none         &none         &none           &none   &none   &none   &none  &none  &none
                                            &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };

        NuPad_4 {
            bindings = <
&none  &none      &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp ASTERISK    &none           &none  &none  &none  &none  &tog 4
&none  &kp EQUAL  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp MINUS       &msc SCRL_UP    &none  &none  &none  &none  &none
&none  &kp SLASH  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PLUS        &msc SCRL_DOWN  &none  &none  &none  &none  &macro
                                   &kp KP_NUMBER_0  &kp PERIOD       &kp KP_ENTER    &none           &none  &none
            >;
        };

        layer_5 {
            bindings = <
&none  &none        &none        &none        &none        &none          &none   &none   &none   &none  &none  &none
&none  &kp LG(F13)  &kp LG(F14)  &kp LG(F15)  &kp LG(F16)  &kp LG(F17)    &none   &none   &none   &none  &none  &none
&none  &kp LG(F18)  &kp LG(F19)  &kp LG(F20)  &kp LG(F21)  &kp LG(F23)    &none   &none   &none   &none  &none  &none
                                 &trans       &trans       &trans         &trans  &trans  &trans
            >;
        };
    };
};
